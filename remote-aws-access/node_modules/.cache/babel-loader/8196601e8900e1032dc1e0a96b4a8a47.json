{"ast":null,"code":"import{useLayoutEffect,useRef}from'react';export var SingleItemContainer=function SingleItemContainer(_ref){var initValue=_ref.initValue,useHookBody=_ref.useHookBody,applyStateChange=_ref.applyStateChange;var lastState=useRef(initValue);if(typeof useHookBody!=='function'){throw new Error(\"function expected as hook body parameter. got \".concat(typeof useHookBody));}var val=useHookBody();//useLayoutEffect is safe from SSR perspective because SingleItemContainer should never be rendered on server\nuseLayoutEffect(function(){if(lastState.current!==val){lastState.current=val;applyStateChange(val);}},[applyStateChange,val]);return null;};","map":{"version":3,"sources":["/Users/nicholaws/Documents/final_year_project/WARCC/remote-aws-access/src/components/react-singleton-hook/src/components/SingleItemContainer.js"],"names":["useLayoutEffect","useRef","SingleItemContainer","initValue","useHookBody","applyStateChange","lastState","Error","val","current"],"mappings":"AAAA,OAASA,eAAT,CAA0BC,MAA1B,KAAwC,OAAxC,CAEA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,MAAkD,IAA/CC,CAAAA,SAA+C,MAA/CA,SAA+C,CAApCC,WAAoC,MAApCA,WAAoC,CAAvBC,gBAAuB,MAAvBA,gBAAuB,CACnF,GAAMC,CAAAA,SAAS,CAAGL,MAAM,CAACE,SAAD,CAAxB,CACA,GAAI,MAAOC,CAAAA,WAAP,GAAuB,UAA3B,CAAuC,CACrC,KAAM,IAAIG,CAAAA,KAAJ,yDAA2D,MAAOH,CAAAA,WAAlE,EAAN,CACD,CACD,GAAMI,CAAAA,GAAG,CAAGJ,WAAW,EAAvB,CAEA;AACAJ,eAAe,CAAC,UAAM,CACpB,GAAIM,SAAS,CAACG,OAAV,GAAsBD,GAA1B,CAA+B,CAC7BF,SAAS,CAACG,OAAV,CAAoBD,GAApB,CACAH,gBAAgB,CAACG,GAAD,CAAhB,CACD,CACF,CALc,CAKZ,CAACH,gBAAD,CAAmBG,GAAnB,CALY,CAAf,CAOA,MAAO,KAAP,CACD,CAhBM","sourcesContent":["import { useLayoutEffect, useRef } from 'react';\n\nexport const SingleItemContainer = ({ initValue, useHookBody, applyStateChange }) => {\n  const lastState = useRef(initValue);\n  if (typeof useHookBody !== 'function') {\n    throw new Error(`function expected as hook body parameter. got ${typeof useHookBody}`);\n  }\n  const val = useHookBody();\n\n  //useLayoutEffect is safe from SSR perspective because SingleItemContainer should never be rendered on server\n  useLayoutEffect(() => {\n    if (lastState.current !== val) {\n      lastState.current = val;\n      applyStateChange(val);\n    }\n  }, [applyStateChange, val]);\n\n  return null;\n};\n"]},"metadata":{},"sourceType":"module"}