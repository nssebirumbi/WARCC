{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar socket_io_1 = require(\"./socket-io\");\n\nvar attach_listener_1 = require(\"./attach-listener\");\n\nvar constants_1 = require(\"./constants\");\n\nvar create_or_join_1 = require(\"./create-or-join\");\n\nvar proxy_1 = require(\"./proxy\");\n\nvar ReadyStateEnum;\n\n(function (ReadyStateEnum) {\n  ReadyStateEnum[ReadyStateEnum[\"Connecting\"] = 0] = \"Connecting\";\n  ReadyStateEnum[ReadyStateEnum[\"Open\"] = 1] = \"Open\";\n  ReadyStateEnum[ReadyStateEnum[\"Closing\"] = 2] = \"Closing\";\n  ReadyStateEnum[ReadyStateEnum[\"Closed\"] = 3] = \"Closed\";\n})(ReadyStateEnum = exports.ReadyStateEnum || (exports.ReadyStateEnum = {})); // export type WebSocketProxy = <typeof ProxyWebSocket>;\n\n\nexports.useWebSocket = function (url, options) {\n  if (options === void 0) {\n    options = constants_1.DEFAULT_OPTIONS;\n  }\n\n  var _a = react_1.useState(null),\n      lastMessage = _a[0],\n      setLastMessage = _a[1];\n\n  var _b = react_1.useState({}),\n      readyState = _b[0],\n      setReadyState = _b[1];\n\n  var webSocketRef = react_1.useRef(null);\n  var reconnectCount = react_1.useRef(0);\n  var expectClose = react_1.useRef(false);\n  var webSocketProxy = react_1.useRef(null);\n  var retryCount = react_1.useRef(0);\n  var staticOptionsCheck = react_1.useRef(false);\n  var convertedUrl = react_1.useMemo(function () {\n    var converted = options.fromSocketIO ? socket_io_1.parseSocketIOUrl(url) : url;\n    var alreadyHasQueryParams = options.fromSocketIO;\n    return options.queryParams ? socket_io_1.appendQueryParams(converted, options.queryParams, alreadyHasQueryParams) : converted;\n  }, [url]);\n  var sendMessage = react_1.useCallback(function (message) {\n    webSocketRef.current && webSocketRef.current.send(message);\n  }, []);\n  var getWebSocket = react_1.useCallback(function () {\n    if (webSocketProxy.current === null) {\n      webSocketProxy.current = proxy_1.default(webSocketRef.current);\n    }\n\n    return webSocketProxy.current;\n  }, []);\n  react_1.useEffect(function () {\n    var removeListeners;\n\n    var start = function () {\n      expectClose.current = false;\n      create_or_join_1.createOrJoinSocket(webSocketRef, convertedUrl, setReadyState, options);\n      removeListeners = attach_listener_1.attachListeners(webSocketRef.current, convertedUrl, {\n        setLastMessage: setLastMessage,\n        setReadyState: setReadyState\n      }, options, start, reconnectCount, expectClose);\n    };\n\n    start();\n    return function () {\n      expectClose.current = true;\n      if (webSocketProxy.current) webSocketProxy.current = null;\n      removeListeners();\n    };\n  }, [convertedUrl]);\n  react_1.useEffect(function () {\n    if (options.enforceStaticOptions !== false && staticOptionsCheck.current) {\n      throw new Error('The options object you pass must be static');\n    }\n\n    staticOptionsCheck.current = true;\n  }, [options]);\n  var readyStateFromUrl = readyState[convertedUrl] !== undefined ? readyState[convertedUrl] : constants_1.READY_STATE_CONNECTING;\n  return [sendMessage, lastMessage, readyStateFromUrl, getWebSocket];\n};","map":null,"metadata":{},"sourceType":"script"}