{"ast":null,"code":"import _slicedToArray from\"/Users/nicholaws/Documents/final_year_project/remote-aws-access/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState}from'react';import{singletonHook}from'./react-singleton-hook/src/index';var initShouldConnect=true;var initShouldIntroduceSelf=true;var initCurrentMsg=\"connect wimea.mak.ac.ug:10028\";//const initActiveTask = \"reportMask\"; \nvar initActiveTask=\"reportInterval\";var initActiveNode=\"10m\";var initLogin={password:\"admin1234\",username:\"admin\"};var globalShouldConnect=function globalShouldConnect(){throw new Error('you must useShouldConnect before setting ShouldConnect');};var globalShouldIntroduceSelf=function globalShouldIntroduceSelf(){throw new Error('you must useShouldIntroduceSelf before setting ShouldIntroduceSelf');};var globalCurrentMsg=function globalCurrentMsg(){throw new Error('you must useCurrentMsg before setting CurrentMsg');};var globalActiveTask=function globalActiveTask(){throw new Error('you must useActiveTask before setting ActiveTask');};var globalActiveNode=function globalActiveNode(){throw new Error('you must useActiveNode before setting ActiveNode');};var globalLogin=function globalLogin(){throw new Error('you must useLogin before setting Login');};//--------\nexport var useShouldConnect=singletonHook(initShouldConnect,function(){var _useState=useState(initShouldConnect),_useState2=_slicedToArray(_useState,2),conn=_useState2[0],setCon=_useState2[1];globalShouldConnect=setCon;return conn;});export var useShouldIntroduceSelf=singletonHook(initShouldIntroduceSelf,function(){var _useState3=useState(initShouldIntroduceSelf),_useState4=_slicedToArray(_useState3,2),intro=_useState4[0],setIntro=_useState4[1];globalShouldIntroduceSelf=setIntro;return intro;});export var useCurrentMsg=singletonHook(initCurrentMsg,function(){var _useState5=useState(initCurrentMsg),_useState6=_slicedToArray(_useState5,2),msgg=_useState6[0],setMsg=_useState6[1];globalCurrentMsg=setMsg;return msgg;});export var useActiveTask=singletonHook(initActiveTask,function(){var _useState7=useState(initActiveTask),_useState8=_slicedToArray(_useState7,2),task=_useState8[0],setTask=_useState8[1];globalActiveTask=setTask;return task;});export var useActiveNode=singletonHook(initActiveNode,function(){var _useState9=useState(initActiveNode),_useState10=_slicedToArray(_useState9,2),node=_useState10[0],setNode=_useState10[1];globalActiveNode=setNode;return node;});export var useLogin=singletonHook(initLogin,function(){var _useState11=useState(initLogin),_useState12=_slicedToArray(_useState11,2),logn=_useState12[0],setLogn=_useState12[1];globalLogin=setLogn;return logn;});//--------\nexport var setShouldConnect=function setShouldConnect(cn){return globalShouldConnect(cn);};export var setShouldIntroduceSelf=function setShouldIntroduceSelf(self){return globalShouldIntroduceSelf(self);};export var setCurrentMsg=function setCurrentMsg(msg){return globalCurrentMsg(msg);};export var setActiveTask=function setActiveTask(task){return globalActiveTask(task);};export var setActiveNode=function setActiveNode(node){return globalActiveNode(node);};export var setLogin=function setLogin(logn){return globalLogin(logn);};//","map":{"version":3,"sources":["/Users/nicholaws/Documents/final_year_project/remote-aws-access/src/components/globalFlags.js"],"names":["useState","singletonHook","initShouldConnect","initShouldIntroduceSelf","initCurrentMsg","initActiveTask","initActiveNode","initLogin","password","username","globalShouldConnect","Error","globalShouldIntroduceSelf","globalCurrentMsg","globalActiveTask","globalActiveNode","globalLogin","useShouldConnect","conn","setCon","useShouldIntroduceSelf","intro","setIntro","useCurrentMsg","msgg","setMsg","useActiveTask","task","setTask","useActiveNode","node","setNode","useLogin","logn","setLogn","setShouldConnect","cn","setShouldIntroduceSelf","self","setCurrentMsg","msg","setActiveTask","setActiveNode","setLogin"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { singletonHook } from './react-singleton-hook/src/index';\n\nconst initShouldConnect = true;  \nconst initShouldIntroduceSelf = true;  \nconst initCurrentMsg = \"connect wimea.mak.ac.ug:10028\";  \n//const initActiveTask = \"reportMask\"; \nconst initActiveTask = \"reportInterval\";\nconst initActiveNode = \"10m\";\nconst initLogin = {password:\"admin1234\",username:\"admin\"};\n\n\nlet globalShouldConnect = () => { throw new Error('you must useShouldConnect before setting ShouldConnect'); }; \nlet globalShouldIntroduceSelf = () => { throw new Error('you must useShouldIntroduceSelf before setting ShouldIntroduceSelf'); };\nlet globalCurrentMsg = () => { throw new Error('you must useCurrentMsg before setting CurrentMsg'); }; \nlet globalActiveTask = () => { throw new Error('you must useActiveTask before setting ActiveTask'); };\nlet globalActiveNode = () => { throw new Error('you must useActiveNode before setting ActiveNode'); }; \nlet globalLogin = () => { throw new Error('you must useLogin before setting Login'); }; \n\n//--------\nexport const useShouldConnect = singletonHook(initShouldConnect, () => {\n  const [conn, setCon] = useState(initShouldConnect);\n  globalShouldConnect = setCon;\n  return conn;\n});  \nexport const useShouldIntroduceSelf = singletonHook(initShouldIntroduceSelf, () => {\n  const [intro, setIntro] = useState(initShouldIntroduceSelf);\n  globalShouldIntroduceSelf = setIntro;\n  return intro;\n});\nexport const useCurrentMsg = singletonHook(initCurrentMsg, () => {\n  const [msgg, setMsg] = useState(initCurrentMsg);\n  globalCurrentMsg = setMsg;\n  return msgg;\n}); \nexport const useActiveTask = singletonHook(initActiveTask, () => {\n  const [task, setTask] = useState(initActiveTask);\n  globalActiveTask = setTask;\n  return task;\n}); \n\nexport const useActiveNode = singletonHook(initActiveNode, () => {\n  const [node, setNode] = useState(initActiveNode);\n  globalActiveNode = setNode;\n  return node;\n}); \n\nexport const useLogin = singletonHook(initLogin, () => {\n  const [logn, setLogn] = useState(initLogin);\n  globalLogin = setLogn;\n  return logn;\n});\n//--------\n\nexport const setShouldConnect = cn => globalShouldConnect(cn); \nexport const setShouldIntroduceSelf = self => globalShouldIntroduceSelf(self);\nexport const setCurrentMsg = msg => globalCurrentMsg(msg); \nexport const setActiveTask = task => globalActiveTask(task);\nexport const setActiveNode = node => globalActiveNode(node); \nexport const setLogin = logn => globalLogin(logn); \n\n//\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}