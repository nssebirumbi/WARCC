{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar constants_1 = require(\"./constants\");\n\nvar globals_1 = require(\"./globals\");\n\nvar subscribers = {};\n\nexports.addSubscriber = function (webSocketInstance, url, setters, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var setLastMessage = setters.setLastMessage,\n      setReadyState = setters.setReadyState;\n\n  if (subscribers[url] === undefined) {\n    subscribers[url] = [];\n\n    webSocketInstance.onmessage = function (message) {\n      if (typeof options.filter === 'function' && options.filter(message) !== true) {\n        return;\n      }\n\n      subscribers[url].forEach(function (subscriber) {\n        subscriber.setLastMessage(message);\n\n        if (subscriber.options.onMessage) {\n          subscriber.options.onMessage(message);\n        }\n      });\n    };\n\n    webSocketInstance.onclose = function (event) {\n      subscribers[url].forEach(function (subscriber) {\n        subscriber.setReadyState(function (prev) {\n          var _a;\n\n          return Object.assign({}, prev, (_a = {}, _a[url] = constants_1.READY_STATE_CLOSED, _a));\n        });\n\n        if (subscriber.options.onClose) {\n          subscriber.options.onClose(event);\n        }\n      });\n      subscribers[url] = undefined;\n      globals_1.sharedWebSockets[url] = undefined;\n    };\n\n    webSocketInstance.onerror = function (error) {\n      subscribers[url].forEach(function (subscriber) {\n        if (subscriber.options.onError) {\n          subscriber.options.onError(error);\n        }\n      });\n    };\n\n    webSocketInstance.onopen = function (event) {\n      subscribers[url].forEach(function (subscriber) {\n        subscriber.setReadyState(function (prev) {\n          var _a;\n\n          return Object.assign({}, prev, (_a = {}, _a[url] = constants_1.READY_STATE_OPEN, _a));\n        });\n\n        if (subscriber.options.onOpen) {\n          subscriber.options.onOpen(event);\n        }\n      });\n    };\n  } else {\n    setReadyState(function (prev) {\n      var _a;\n\n      return Object.assign({}, prev, (_a = {}, _a[url] = globals_1.sharedWebSockets[url].readyState, _a));\n    });\n  }\n\n  var subscriber = {\n    setLastMessage: setLastMessage,\n    setReadyState: setReadyState,\n    options: options\n  };\n  subscribers[url].push(subscriber);\n  return function () {\n    if (subscribers[url] !== undefined) {\n      var index = subscribers[url].indexOf(subscriber);\n\n      if (index === -1) {\n        throw new Error('A subscriber that is no longer registered has attempted to unsubscribe');\n      }\n\n      if (subscribers[url].length === 1) {\n        subscribers[url][0].setReadyState(function (prev) {\n          var _a;\n\n          return Object.assign({}, prev, (_a = {}, _a[url] = constants_1.READY_STATE_CLOSING, _a));\n        });\n        webSocketInstance.close();\n      } else {\n        subscribers[url].splice(index, 1);\n      }\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}