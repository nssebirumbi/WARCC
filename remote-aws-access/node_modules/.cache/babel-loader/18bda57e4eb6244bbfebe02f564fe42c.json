{"ast":null,"code":"import _toConsumableArray from\"/Users/nicholaws/Documents/final_year_project/remote-aws-access/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/nicholaws/Documents/final_year_project/remote-aws-access/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{SingleItemContainer}from'./SingleItemContainer';import{mount}from'../utils/env';import{warning}from'../utils/warning';var SingletonHooksContainerMounted=false;var SingletonHooksContainerRendered=false;var SingletonHooksContainerMountedAutomatically=false;var mountQueue=[];var mountIntoContainerDefault=function mountIntoContainerDefault(item){mountQueue.push(item);};var mountIntoContainer=mountIntoContainerDefault;export var SingletonHooksContainer=function SingletonHooksContainer(){SingletonHooksContainerRendered=true;useEffect(function(){if(SingletonHooksContainerMounted){warning('SingletonHooksContainer is mounted second time. '+'You should mount SingletonHooksContainer before any other component and never unmount it.'+'Alternatively, dont use SingletonHooksContainer it at all, we will handle that for you.');}SingletonHooksContainerMounted=true;return function(){return process.env.NODE_ENV!=='test'&&warning('SingletonHooksContainer is removed from DOM. its not supported, singleton hooks will stop updating.');};},[]);var _useState=useState([]),_useState2=_slicedToArray(_useState,2),hooks=_useState2[0],setHooks=_useState2[1];useEffect(function(){mountIntoContainer=function mountIntoContainer(item){return setHooks(function(hooks){return[].concat(_toConsumableArray(hooks),[item]);});};setHooks(mountQueue);},[]);return React.createElement(React.Fragment,null,hooks.map(function(h,i){return React.createElement(SingleItemContainer,Object.assign({},h,{key:i}));}));};export var addHook=function addHook(hook){if(!SingletonHooksContainerRendered&&!SingletonHooksContainerMountedAutomatically){SingletonHooksContainerMountedAutomatically=true;mount(SingletonHooksContainer);}mountIntoContainer(hook);};export var resetLocalStateForTests=function resetLocalStateForTests(){SingletonHooksContainerMounted=false;SingletonHooksContainerRendered=false;SingletonHooksContainerMountedAutomatically=false;mountQueue=[];mountIntoContainer=mountIntoContainerDefault;};","map":{"version":3,"sources":["/Users/nicholaws/Documents/final_year_project/remote-aws-access/src/components/react-singleton-hook/src/components/SingletonHooksContainer.js"],"names":["React","useState","useEffect","SingleItemContainer","mount","warning","SingletonHooksContainerMounted","SingletonHooksContainerRendered","SingletonHooksContainerMountedAutomatically","mountQueue","mountIntoContainerDefault","item","push","mountIntoContainer","SingletonHooksContainer","process","env","NODE_ENV","hooks","setHooks","map","h","i","addHook","hook","resetLocalStateForTests"],"mappings":"4SAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,mBAAT,KAAoC,uBAApC,CACA,OAASC,KAAT,KAAsB,cAAtB,CACA,OAASC,OAAT,KAAwB,kBAAxB,CAEA,GAAIC,CAAAA,8BAA8B,CAAG,KAArC,CACA,GAAIC,CAAAA,+BAA+B,CAAG,KAAtC,CACA,GAAIC,CAAAA,2CAA2C,CAAG,KAAlD,CAEA,GAAIC,CAAAA,UAAU,CAAG,EAAjB,CACA,GAAMC,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACC,IAAD,CAAU,CAAEF,UAAU,CAACG,IAAX,CAAgBD,IAAhB,EAAwB,CAAtE,CACA,GAAIE,CAAAA,kBAAkB,CAAGH,yBAAzB,CAEA,MAAO,IAAMI,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,EAAM,CAC3CP,+BAA+B,CAAG,IAAlC,CACAL,SAAS,CAAC,UAAM,CACd,GAAII,8BAAJ,CAAoC,CAClCD,OAAO,CAAC,mDACJ,2FADI,CAEJ,yFAFG,CAAP,CAGD,CACDC,8BAA8B,CAAG,IAAjC,CACA,MAAO,kBAAMS,CAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,MAAzB,EAAmCZ,OAAO,CAAC,qGAAD,CAAhD,EAAP,CACD,CARQ,CAQN,EARM,CAAT,CAF2C,cAYjBJ,QAAQ,CAAC,EAAD,CAZS,wCAYpCiB,KAZoC,eAY7BC,QAZ6B,eAc3CjB,SAAS,CAAC,UAAM,CACdW,kBAAkB,CAAG,4BAAAF,IAAI,QAAIQ,CAAAA,QAAQ,CAAC,SAAAD,KAAK,qCAAQA,KAAR,GAAeP,IAAf,IAAN,CAAZ,EAAzB,CACAQ,QAAQ,CAACV,UAAD,CAAR,CACD,CAHQ,CAGN,EAHM,CAAT,CAKA,MAAO,yCAAGS,KAAK,CAACE,GAAN,CAAU,SAACC,CAAD,CAAIC,CAAJ,QAAU,qBAAC,mBAAD,kBAAyBD,CAAzB,EAA4B,GAAG,CAAEC,CAAjC,GAAV,EAAV,CAAH,CAAP,CACD,CApBM,CAuBP,MAAO,IAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,IAAI,CAAI,CAC7B,GAAI,CAACjB,+BAAD,EAAoC,CAACC,2CAAzC,CAAsF,CACpFA,2CAA2C,CAAG,IAA9C,CACAJ,KAAK,CAACU,uBAAD,CAAL,CACD,CAEDD,kBAAkB,CAACW,IAAD,CAAlB,CACD,CAPM,CASP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,EAAM,CAC3CnB,8BAA8B,CAAG,KAAjC,CACAC,+BAA+B,CAAG,KAAlC,CACAC,2CAA2C,CAAG,KAA9C,CACAC,UAAU,CAAG,EAAb,CACAI,kBAAkB,CAAGH,yBAArB,CACD,CANM","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { SingleItemContainer } from './SingleItemContainer';\nimport { mount } from '../utils/env';\nimport { warning } from '../utils/warning';\n\nlet SingletonHooksContainerMounted = false;\nlet SingletonHooksContainerRendered = false;\nlet SingletonHooksContainerMountedAutomatically = false;\n\nlet mountQueue = [];\nconst mountIntoContainerDefault = (item) => { mountQueue.push(item); };\nlet mountIntoContainer = mountIntoContainerDefault;\n\nexport const SingletonHooksContainer = () => {\n  SingletonHooksContainerRendered = true;\n  useEffect(() => {\n    if (SingletonHooksContainerMounted) {\n      warning('SingletonHooksContainer is mounted second time. '\n        + 'You should mount SingletonHooksContainer before any other component and never unmount it.'\n        + 'Alternatively, dont use SingletonHooksContainer it at all, we will handle that for you.');\n    }\n    SingletonHooksContainerMounted = true;\n    return () => process.env.NODE_ENV !== 'test' && warning('SingletonHooksContainer is removed from DOM. its not supported, singleton hooks will stop updating.');\n  }, []);\n\n  const [hooks, setHooks] = useState([]);\n\n  useEffect(() => {\n    mountIntoContainer = item => setHooks(hooks => [...hooks, item]);\n    setHooks(mountQueue);\n  }, []);\n\n  return <>{hooks.map((h, i) => <SingleItemContainer {...h} key={i}/>)}</>;\n};\n\n\nexport const addHook = hook => {\n  if (!SingletonHooksContainerRendered && !SingletonHooksContainerMountedAutomatically) {\n    SingletonHooksContainerMountedAutomatically = true;\n    mount(SingletonHooksContainer);\n  }\n\n  mountIntoContainer(hook);\n};\n\nexport const resetLocalStateForTests = () => {\n  SingletonHooksContainerMounted = false;\n  SingletonHooksContainerRendered = false;\n  SingletonHooksContainerMountedAutomatically = false;\n  mountQueue = [];\n  mountIntoContainer = mountIntoContainerDefault;\n};\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}